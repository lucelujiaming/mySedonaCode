@niagaraIcon="module://icons/x16/control/control.png"
class DelayOut
  extends Component
{
    define Str DELAYMETHOD        = "DelayOn, DelayOff"
    define int DELAY_METHOD_ON        = 0
    define int DELAY_METHOD_OFF       = 1
    // Lujiaming add these end at 23/05/22
  
	// dataExpectingReplyNPCI
	@config
	@range = DELAYMETHOD
	@fieldWidth = 200
	property int delayOperation = DELAY_METHOD_ON
  
	property
	float in

	@readonly
	property
	float out

	@readonly
	property
	float tm = 0.0f

	@config
	@unit=Units.second
	property
	float delay = 1.0f

	virtual override void start()
	{
		lastIn = in
	}

  virtual override void execute()
  {
    long now = Sys.ticks() / 1000000L
	if(delayOperation == DELAY_METHOD_ON)
	{
	    // Rising edge appears
		if (in != 0.0f && lastIn == 0.0f) {
		  delayEnd = now + (long)(delay * 1000.0f )
		}
		// Rising edge does not appear
		if (in == 0.0f) {
		  delayEnd = 0L
		  out := 0.0f
	    // Rising edge appears
		} else {
	      // in != 0.0f && lastIn != 0.0f
		  if (delayEnd < now) {
			out := 1.0f
		  } else {
			out := 0.0f
		  }
		  // Rising edge triggered
		  if (out != 0.0f) {
			delayEnd = 0L
		  }
		}
    }
	else if(delayOperation == DELAY_METHOD_OFF)
	{
	    // Descending edge appears
		if (in == 0.0f && lastIn != 0.0f) {
		  delayEnd = now + (long)(delay * 1000.0f )
		}
		// Descending edge does not appear
		if (in != 0.0f) {
		  delayEnd = 0L
		  out := 1.0f
	    // Descending edge appears
		} else {
	      // in == 0.0f && lastIn == 0.0f
		  if (delayEnd > now) {
			out := 1.0f
		  } else {
			out := 0.0f
		  }
		  // Descending edge triggered
		  if (out == 0.0f) {
			delayEnd = 0L
		  }
		}
    }
    if (delayEnd == 0L) {
      tm := 0.0f
    } else {
      tm := (float)((delayEnd - now)/1000L)
    }
    lastIn = in
  }

  private long delayEnd = 0L
  private float lastIn
}
