//
// Copyright (c) 2007 Tridium, Inc
// Licensed under the Academic Free License version 3.0
//
// History:
//   17 May 07  Andy Sunders  Creation
//   07 Aug 09  Clif Turman   Added tests for ISW and SW4
//

**
** SwTest
**
class SwTest
  extends Test
{
  static inline SW asw
  static inline SW4 asw4

  static void test()
  {
    //SW test
    asw.in1 := 1.0
    asw.in2 := 2.0
    asw.s1 := 1.0
    asw.execute()
    assert(asw.out == 2.0)
    asw.s1 := 0.0
    asw.execute()
    assert(asw.out == 1.0)
    asw.in1 := 50.0
    asw.execute()
    assert(asw.out == 50.0)
    asw.in2 := 100.0
    asw.s1 := 1.0
    asw.execute()
    assert(asw.out == 100.0)

    //SW4 test
    for(int i = -4; i < 5; i++)
    {
      float in1 = (float)i * 3.0
      float in2 = (float)i + 2000.0
      float in3 = (float)i * -3.0
      float in4 = (float)i - 4000.0
      //Sys.out.print("  startsAt:$i in1:$in1 in2:$in2 in3:$in3 in4:$in4").nl()
      asw4.in1 := in1
      asw4.in2 := in2
      asw4.in3 := in3
      asw4.in4 := in4
      asw4.startsAt := (float)i
      
      asw4.sel := (float)(i - 1)         //selector less than startsAt, selects 1st output
      asw4.execute()
      //Sys.out.print("    sel:$asw4.sel out:$asw4.out").nl()
      assert(asw4.out == in1)
      
      asw4.sel := (float)i
      asw4.execute()
      //Sys.out.print("    sel:$asw4.sel out:$asw4.out").nl()
      assert(asw4.out == in1)
      
      asw4.sel := (float)(i + 1)
      asw4.execute()
      //Sys.out.print("    sel:$asw4.sel out:$asw4.out").nl()
      assert(asw4.out == in2)
      
      asw4.sel := (float)(i + 2)
      asw4.execute()
      //Sys.out.print("    sel:$asw4.sel out:$asw4.out").nl()
      assert(asw4.out == in3)
      
      asw4.sel := (float)(i + 3)
      asw4.execute()
      //Sys.out.print("    sel:$asw4.sel out:$asw4.out").nl()
      assert(asw4.out == in4)
      
      asw4.sel := (float)(i + 4)         //selector greater than startsAt, selects 4th output
      asw4.execute()
      //Sys.out.print("    sel:$asw4.sel out:$asw4.out").nl()
      assert(asw4.out == in4)
    }

  }


}
