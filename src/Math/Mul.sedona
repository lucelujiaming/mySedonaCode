//
// Mul Two Input Multiplication object
//
// out = in1 * in2
//
@niagaraIcon="module://icons/x16/control/math/multiply.png"
class Mul
  extends Component
{
    ** Enable count
    property int enableCount = 2
    
  // out = in1 * in2
  @readonly property float out

    ** input 1
    property float in1 = 1.0

    ** input 2
    property float in2 = 1.0

    ** input 3
    property float in3 = 1.0

    ** input 4
    property float in4 = 1.0

    ** input 5
    property float in5 = 1.0

    ** input 6
    property float in6 = 1.0

    ** input 7
    property float in7 = 1.0

    ** input 8
    property float in8 = 1.0

    ** input 9
    property float in9 = 1.0

    ** input 10
    property float in10 = 1.0

    ** input 11
    property float in11 = 1.0

    ** input 12
    property float in12 = 1.0

    ** input 13
    property float in13 = 1.0

    ** input 14
    property float in14 = 1.0

    ** input 15
    property float in15 = 1.0

    ** input 16
    property float in16 = 1.0

    ** input 17
    property float in17 = 1.0

    ** input 18
    property float in18 = 1.0

    ** input 19
    property float in19 = 1.0

    ** input 20
    property float in20 = 1.0

    ** input 21
    property float in21 = 1.0

    ** input 22
    property float in22 = 1.0

    ** input 23
    property float in23 = 1.0

    ** input 24
    property float in24 = 1.0

    ** input 25
    property float in25 = 1.0

    ** input 26
    property float in26 = 1.0

    ** input 27
    property float in27 = 1.0

    ** input 28
    property float in28 = 1.0

    ** input 29
    property float in29 = 1.0

    ** input 30
    property float in30 = 1.0

    ** input 31
    property float in31 = 1.0

    ** input 32
    property float in32 = 1.0

    ** input 33
    property float in33 = 1.0

    ** input 34
    property float in34 = 1.0

    ** input 35
    property float in35 = 1.0

    ** input 36
    property float in36 = 1.0

    ** input 37
    property float in37 = 1.0

    ** input 38
    property float in38 = 1.0

    ** input 39
    property float in39 = 1.0

    ** input 40
    property float in40 = 1.0

    ** input 41
    property float in41 = 1.0

    ** input 42
    property float in42 = 1.0

    ** input 43
    property float in43 = 1.0

    ** input 44
    property float in44 = 1.0

    ** input 45
    property float in45 = 1.0

    ** input 46
    property float in46 = 1.0

    ** input 47
    property float in47 = 1.0

    ** input 48
    property float in48 = 1.0

    ** input 49
    property float in49 = 1.0

    ** input 50
    property float in50 = 1.0

    ** input 51
    property float in51 = 1.0

    ** input 52
    property float in52 = 1.0

    ** input 53
    property float in53 = 1.0

    ** input 54
    property float in54 = 1.0

    ** input 55
    property float in55 = 1.0

    ** input 56
    property float in56 = 1.0

    ** input 57
    property float in57 = 1.0

    ** input 58
    property float in58 = 1.0

    ** input 59
    property float in59 = 1.0

    ** input 60
    property float in60 = 1.0

    ** input 61
    property float in61 = 1.0

    ** input 62
    property float in62 = 1.0

    ** input 63
    property float in63 = 1.0

    ** input 64
    property float in64 = 1.0

    ** input 65
    property float in65 = 1.0

    ** input 66
    property float in66 = 1.0

    ** input 67
    property float in67 = 1.0

    ** input 68
    property float in68 = 1.0

    ** input 69
    property float in69 = 1.0

    ** input 70
    property float in70 = 1.0

    ** input 71
    property float in71 = 1.0

    ** input 72
    property float in72 = 1.0

    ** input 73
    property float in73 = 1.0

    ** input 74
    property float in74 = 1.0

    ** input 75
    property float in75 = 1.0

    ** input 76
    property float in76 = 1.0

    ** input 77
    property float in77 = 1.0

    ** input 78
    property float in78 = 1.0

    ** input 79
    property float in79 = 1.0

    ** input 80
    property float in80 = 1.0

    ** input 81
    property float in81 = 1.0

    ** input 82
    property float in82 = 1.0

    ** input 83
    property float in83 = 1.0

    ** input 84
    property float in84 = 1.0

    ** input 85
    property float in85 = 1.0

    ** input 86
    property float in86 = 1.0

    ** input 87
    property float in87 = 1.0

    ** input 88
    property float in88 = 1.0

    ** input 89
    property float in89 = 1.0

    ** input 90
    property float in90 = 1.0

    ** input 91
    property float in91 = 1.0

    ** input 92
    property float in92 = 1.0

    ** input 93
    property float in93 = 1.0

    ** input 94
    property float in94 = 1.0

    ** input 95
    property float in95 = 1.0

    ** input 96
    property float in96 = 1.0

    ** input 97
    property float in97 = 1.0

    ** input 98
    property float in98 = 1.0

    ** input 99
    property float in99 = 1.0

    ** input 100
    property float in100 = 1.0


  //
  // Execute is called once every scan.
  //
  virtual override void execute()
  {
    float outTwentyth = 0.0 
    float outFortyth  = 0.0 
    float outSixtyth  = 0.0 
    float outEightyth = 0.0 
    float outLastth   = 0.0 
    outTwentyth  =   in1 *  in2 *  in3 *  in4 *  in5 *  in6 *  in7 *  in8 *  in9 * in10 
                  * in11 * in12 * in13 * in14 * in15 * in16 * in17 * in18 * in19 * in20 
    outFortyth   =  in21 * in22 * in23 * in24 * in25 * in26 * in27 * in28 * in29 * in30
                  * in31 * in32 * in33 * in34 * in35 * in36 * in37 * in38 * in39 * in40
    outSixtyth   =  in41 * in42 * in43 * in44 * in45 * in46 * in47 * in48 * in49 * in50
                  * in51 * in52 * in53 * in54 * in55 * in56 * in57 * in58 * in59 * in60
    outEightyth  =  in61 * in62 * in63 * in64 * in65 * in66 * in67 * in68 * in69 * in70
                  * in71 * in72 * in73 * in74 * in75 * in76 * in77 * in78 * in79 * in80
    outLastth    =  in81 * in82 * in83 * in84 * in85 * in86 * in87 * in88 * in89 * in90
                  * in91 * in92 * in93 * in94 * in95 * in96 * in97 * in98 * in99 * in100
    out := outTwentyth * outFortyth * outSixtyth * outEightyth * outLastth
  }
}
