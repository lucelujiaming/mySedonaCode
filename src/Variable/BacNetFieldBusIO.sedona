abstract class BacNetFieldBusIO
  extends Component
{
  ////////////////////////////////////////////////////////////////
  // Constants
  ////////////////////////////////////////////////////////////////
  define Str STATUSRANGE = "OK, OffLine, Ready, NoNet, NoDev, AddrErr, UrlErr, END"
  define int STATUSOK = 0
  define int STATUSOFFLINE = 1
  define int STATUSREADY = 2
  define int STATUSNONET = 3
  define int STATUSNODEV = 4
  define int STATUSEADDR = 5 // set by net
  define int STATUSEURL = 6
  define int STATUSEND = 7

  define Str BANET_PROPVAR_RANGE = "NULL, Boolean, UnsignedInteger, Integer, Float, Double, END"
  // define int BANET_PROPVAR_UNUSEDAPPTAG				= 0xFF
  define int BANET_PROPVAR_NULLAPPTAG				= 0x00
  define int BANET_PROPVAR_BOOLEANAPPTAG				= 0x01
  define int BANET_PROPVAR_UNSIGNEDINTAPPTAG			= 0x02
  define int BANET_PROPVAR_INTEGERAPPTAG				= 0x03
  define int BANET_PROPVAR_REALAPPTAG				= 0x04
  define int BANET_PROPVAR_DOUBLEAPPTAG				= 0x05
  define int BANET_PROPVAR_END            				= 0x06
  
  // define int BANET_PROPVAR_OCTETSTRINGAPPTAG			= 0x06
  // define int BANET_PROPVAR_CHARACTERSTRINGAPPTAG		= 0x07
  // define int BANET_PROPVAR_BITSTRINGAPPTAG			= 0x08
  // define int BANET_PROPVAR_ENUMERATEDAPPTAG			= 0x09
  // define int BANET_PROPVAR_DATEAPPTAG				= 0x0A
  // define int BANET_PROPVAR_TIMEAPPTAG				= 0x0B
  // define int BANET_PROPVAR_OBJECTIDENTIFIERAPPTAG	= 0x0C
  // define int BANET_PROPVAR_RESERVEDAPPTAG13			= 0x0D
  // define int BANET_PROPVAR_RESERVEDAPPTAG14			= 0x0E
  // define int BANET_PROPVAR_RESERVEDAPPTAG15			= 0x0F

  define int BACNET_CONFIRMED_REQUEST_PDU 	= 0 //	[0] BACnet-Confirmed-Request-PDU,
  define int BACNET_UNCONFIRMED_REQUEST_PDU = 1 //	[1] BACnet-Unconfirmed-Request-PDU,
  define int BACNET_SIMPLEACK_PDU 			= 2 //	[2] BACnet-SimpleACK-PDU,
  define int BACNET_COMPLEXACK_PDU 			= 3 //	[3] BACnet-ComplexACK-PDU,
  define int BACNET_SEGMENTACK_PDU 			= 4 //	[4] BACnet-SegmentACK-PDU,
  define int BACNET_ERROR_PDU 				= 5 //	[5] BACnet-Error-PDU,
  define int BACNET_REJECT_PDU 				= 6 //	[6] BACnet-Reject-PDU,
  define int BACNET_ABORT_PDU 				= 7 //	[7] BACnet-Abort-PDU



  ////////////////////////////////////////////////////////////////
  // Properties
  ////////////////////////////////////////////////////////////////
  @summary=false
  @readonly
  @range = STATUSRANGE
  @fieldWidth = 20
  property int status = STATUSNODEV

  @summary=false
  @readonly
  @range = BANET_PROPVAR_RANGE
  @fieldWidth = 20
  property int object_type = BANET_PROPVAR_DOUBLEAPPTAG
  
  @asStr
  @config
  property Buf(64) url = ""

  @config
  property int propertyProperty = 0x1A0176

  override void loaded()
  {
    update()
  }
  override void stop()
  {
    if (bus != null) {
      bus.notifyFlush()
    }
  }

  ////////////////////////////////////////////////////////////////
  // App support
  ////////////////////////////////////////////////////////////////
  void update()
  {
    // devStr = url.toStr()
    devStr.copyFromStr(url.toStr(), url.toStr().length() + 1)
	log.message("111111 devStr=$devStr")
    busId = 0
    if (bus != null) {
      bus.notifyFlush()
    }
    status := STATUSNODEV
	Str tmpBuf = url.toStr()
	log.message("222222 url=$tmpBuf")
    FieldBusNet tmpBus = lookupNetByDeviceName(tmpBuf)
	if (tmpBus != null) {
	    busId = tmpBus.busId
	    log.message("444444 busId=$busId")
	    // trigger notify flush.
	    if (busId != 0) {
	      log.message("55555 busId=$busId")
	      bus = lookupNetById(busId)
	      if (bus != null) {
	      	log.message("66666 bus.notifyFlush()")
	        bus.notifyFlush()
	      }
	    } else {
	      log.message("77777 tmpBus.notifyFlush()")
	      tmpBus.notifyFlush()
	    }
	}
          
    if(bus != null)
    {
       log.message("987654321 ")
    } else {
       log.message("123456789 ") 
    }
  }

  private FieldBusNet lookupNetById(int id)
  {
    Component root
    Component f
    Component n
    Component p = this

    while (Sys.app.lookup(p.parent) != null) {
      p = Sys.app.lookup(p.parent)
    }

    root = p
    for (f = Sys.app.lookup(root.children); f != null; f = Sys.app.lookup(f.nextSibling)) {
      if (f.type.is(Folder.type) && f.name.equals("service")) {
        for (n = Sys.app.lookup(f.children); n != null; n = Sys.app.lookup(n.nextSibling)) {
          if (n.type.is(FieldBusNet.type) && ((FieldBusNet)n).busId == id) {
            return (FieldBusNet)n
          }
        }
      }
    }

    return null
  }
  private FieldBusNet lookupNetByDeviceName(Str devName)
  {
    Component root
    Component f
    Component n
    Component p = this

    while (Sys.app.lookup(p.parent) != null) {
      p = Sys.app.lookup(p.parent)
    }

    root = p
    for (f = Sys.app.lookup(root.children); f != null; f = Sys.app.lookup(f.nextSibling)) {
      if (f.type.is(Folder.type) && f.name.equals("service")) {
        for (n = Sys.app.lookup(f.children); n != null; n = Sys.app.lookup(n.nextSibling)) {
          if (n.type.is(FieldBusNet.type)) {
            for (p = Sys.app.lookup(n.children); p != null; p = Sys.app.lookup(p.nextSibling)) {
              if (p.type.is(FieldBusDevice.type) && devName.equals(((FieldBusDevice)p).deviceName.toStr())) {
                return (FieldBusNet)n
              }
            }
          }
        }
      }
    }

    return null
  }
  
  define Log log
  ////////////////////////////////////////////////////////////////
  // Fields
  ////////////////////////////////////////////////////////////////
  FieldBusNet bus = null
  int cache = 0

  int busId = 0
  inline Str(64) devStr
  int regId = 0
  // int typeId = 0
  // int dataLen = 0
}
