@niagaraIcon="module://icons/x16/control/numericPoint.png"
class bacLocalPresentValue
  extends BacNetFieldBusIO
{
  // Lujiaming add these at 23/02/24
  ////////////////////////////////////////////////////////////////
  // Properties
  ////////////////////////////////////////////////////////////////

  ////////////////////////////////////////////////////////////////
  // config Properties
  ////////////////////////////////////////////////////////////////
  // 
  property float present_value = 0.0f
  // property float in = 0.0f

  @summary=true
  @config
  @asStr
  property Buf(64) alias = ""

  override void start()
  {
    status := STATUSREADY
  }

  override void changed(Slot slot)
  {
    super.changed(slot)
    ** log.message("changed")
    
  }

  override void execute()
  {
      Str aliasStr = alias.toStr()
      ** log.message("111111111 Variable name=$name")
      // find bus and dev
      Component p = Sys.app.lookup(this.parent)
      Component root = null
      while (p != null) {
        root = p
        p = Sys.app.lookup(p.parent)
      }
      if (root != null) {
        // log.message("root:: aliasStr=$aliasStr")
        ** log.message("222222222 Variable name=$name and aliasStr=$aliasStr")
        for (Component f = Sys.app.lookup(root.children); f != null; f = Sys.app.lookup(f.nextSibling)) {
          ** log.message("3333 Variable f.name=${f.name}")
          if (f.type.is(Folder.type) && f.name.equals("play")) {
               ** log.message("4444 Variable f.name=${f.name}")
               for (Component r = Sys.app.lookup(f.children); r != null; r = Sys.app.lookup(r.nextSibling)) {
                    ** log.message("5555 Variable r.name=${r.name}")
                    if (r.type.is(Variable.type))
                    {
                        ** log.message("5555 Variable r.alias=${((Variable)r).alias.toStr()}")
                        ** log.message("5555 Variable aliasStr=$aliasStr")
                        if(((Variable)r).alias.toStr().equals(aliasStr))  {
                            ** log.message("6666 r.value=${((Variable)r).value}")
                            present_value := ((Variable)r).value
                        }
                    }
               }
          }
        }
      }
  }

  // define Log log
  inline float[8] buffer
}
