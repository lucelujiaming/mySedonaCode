abstract class FieldBusDevice
  extends Component
{
  ////////////////////////////////////////////////////////////////
  // Constants
  ////////////////////////////////////////////////////////////////
  define Str STATUSRANGE = "OK, OffLine, Ready, NoNet, NoReg, InnerErr, AddrErr, NameErr, END"
  define int STATUSOK = 0
  define int STATUSOFFLINE = 1
  define int STATUSREADY = 2
  define int STATUSNONET = 3
  define int STATUSNOREG = 4
  define int STATUSEINNER = 5 // set by net
  define int STATUSEADDR = 6 // config err
  define int STATUSENAME = 7
  define int STATUSEND = 8

  virtual int writeReg(int a, int b, int c, float[] buf)
  {
     log.message("---------------FieldBusDevice---------------");
     return 0
  }
  virtual bool openPort(bool logError)
  {
     return true
  }
  ////////////////////////////////////////////////////////////////
  // Properties
  ////////////////////////////////////////////////////////////////
  @readonly
  @range = STATUSRANGE
  @fieldWidth = 20
  property int status = STATUSNOREG

  @asStr
  @config
  property Buf(64) deviceName = ""

  ////////////////////////////////////////////////////////////////
  // Fields
  ////////////////////////////////////////////////////////////////
  define int READ_PROPERTY_MULTIPLE_SUPPORT_NONE    = 0
  define int READ_PROPERTY_MULTIPLE_CHECKING        = 1
  define int READ_PROPERTY_MULTIPLE_NOT_SUPPORT     = 2
  define int READ_PROPERTY_MULTIPLE_SUPPORTED       = 3
  
  Str dataRecvGramAddr
  // int objectIdentifier
  int sourceNetworkAddress
  int invokeID = 1
  
  // SADR: 5
  int sadr = 0
  int maxAPDULength = 0
  
  int readPropertyMultipleSupport = READ_PROPERTY_MULTIPLE_SUPPORT_NONE
}
