//
// Copyright (c) 2011 Tridium, Inc
// Licensed under the Academic Free License version 3.0
//
// History:
//   12 Dec 11  Elizabeth McKenney  Creation
//

**
** ReheatSeqTest
**
class ReheatSeqTest
  extends Test
{
  static inline ReheatSeq  rs

  define float[10] in_test   = { -1.0, -0.2, 0.2, 0.5, 1.8, 2.4, 1.8, 0.2, -0.2, -1.0 }
  define int[10]   outs_test = {    0,    0,   1,   1,   1,   3,   3,   1,    1,    0 } 
  define int[10]   dOn_test  = {    0,    0,   1,   1,   1,   2,   2,   1,    1,    0 } 
 
  static void test()
  {
    rs.hysteresis := 0.5

    rs.threshold1 := 0.0
    rs.threshold2 := 2.0
    rs.threshold3 := 4.0
    rs.threshold4 := 6.0
    
    rs.enable := false

    for (int j=0; j<10; j++)
    {
      rs.in := in_test[j]
      rs.execute()
      assert( collectOuts() == 0 )
      assert( rs.dOn == 0 )
    }

    rs.enable := true

    for (int j=0; j<10; j++)
    {
      rs.in := in_test[j]
      rs.execute()
      assert( collectOuts() == outs_test[j] )
      assert( rs.dOn == dOn_test[j] )
    }

  }


  static int collectOuts()
  {
    int temp = 0
    if (rs.out1) temp |= 0x1
    if (rs.out2) temp |= 0x2
    if (rs.out3) temp |= 0x4
    if (rs.out4) temp |= 0x8
    return temp
  }

}
