@niagaraIcon="module://icons/x16/control/control.png"
class RunHour
  extends Component
{
  @config @asStr
  property Buf(32) url = ""

  @asStr
  @readonly
  property Buf(32) hourName = ""

  @readonly
  property
  float value = 0.0f

  property
  float in = 0.0f

  property
  float preset = 0.0f

  override void start()
  {
    Runtime.load()
    if (url.toStr().length() > 0) {
      hourName.clear()
      hourName.copyFromStr(url.toStr())
      ctx = Runtime.timeOpen(hourName.toStr())
      if (ctx != -1) {
        if (Runtime.timeRead(ctx, buf) == 0) {
          value := buf[1] + (buf[2] / 3600.0f)
        }
      }
    }
  }
  override void changed(Slot slot)
  {
    super.changed(slot)
    if (slot == RunHour.url) {
      if (ctx != -1) {
        Runtime.timeClose(ctx)
        ctx = -1
      }
      if (url.toStr().length() > 0) {
        hourName.clear()
        hourName.copyFromStr(url.toStr())
        ctx = Runtime.timeOpen(hourName.toStr())
        if (ctx != -1) {
          if (Runtime.timeRead(ctx, buf) == 0) {
            value := buf[1] + (buf[2] / 3600.0f)
          }
        }
      }
    } else if (slot == RunHour.in) {
      if (ctx != -1 && isSlotLinkToIN()) {
        Runtime.timeRead(ctx, buf)
        buf[0] = in
        Runtime.timeWrite(ctx, buf)
      }
    }
  }
  override void stop()
  {
    if (ctx != -1) {
      Runtime.timeClose(ctx)
      ctx = -1
    }
  }

  override void execute()
  {
    if (ctx != -1 && isSlotLinkToPRESET()) {
      if (initCnt < 0) {
        initCnt++
        lastPreSet = preset
      } else if (lastPreSet != preset) {
        lastPreSet = preset
        buf[0] = in
        buf[1] = (float)((int)preset)
        buf[2] = (preset - (float)((int)preset)) * 3600.0f
        Runtime.timeWrite(ctx, buf)
      }
    } else {
      initCnt = -20
    }
    if (ctx != -1) {
      if (Runtime.timeRead(ctx, buf) == 0) {
        value := buf[1] + (buf[2] / 3600.0f)
      }
    }
  }

  private bool isSlotLinkToIN()
  {
    for (Link link = linksTo; link != null; link = link.nextTo) {
      Slot slot = type.slot(link.toSlot)
      if (slot == RunHour.in) {
        return true
      }
    }
    return false
  }
  private bool isSlotLinkToPRESET()
  {
    for (Link link = linksTo; link != null; link = link.nextTo) {
      Slot slot = type.slot(link.toSlot)
      if (slot == RunHour.preset) {
        return true
      }
    }
    return false
  }

  private int ctx = -1
  private int initCnt = -20
  private float lastPreSet
  private inline float[3] buf
}
